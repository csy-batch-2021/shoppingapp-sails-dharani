<div class="container-fluid">
    All Orders:
    <br>
    <br>

    <div id="errorMessage"></div>
    <table border="1" class="table table-bordered">
        <thead>
            <tr>
                <th>Sno</th>
                <th>User</th>
                <th>Product</th>
                <th>Price</th>
                <th>Quantity</th>
                <th>Total</th>
                <th>Status</th>
                <th>Ordered On</th>
                <th>Last Modified On</th>
                <th>Action</th>
            </tr>
        </thead>
        <tbody id="order-tbl">

        </tbody>


    </table>
</div>
<script>
    function handleError(err) {
        console.log(err.response);
        console.log("Error1", err.response.status);
        if (err.response.status == 401) {
            toastr.error("Access Denied. Redirect to Login page.");
            window.setTimeout(function () {
                window.location = "login";
            }, 1500);
            // window.location.href = "login";
        }
        else {
            toastr.error("Error", err.response.data.message);
        }
    }
    function loadProducts() {
        let loggedInUser = JSON.parse(localStorage.getItem("LOGGED_IN_USER"));
        let userId = loggedInUser.id;
        let url = "/api/orders?loggedInUserId=" + userId;

        // let url = "/api/orders";
        axios.get(url).then(response => {
            // console.table(response.data);
            displayProducts(response.data);
        }, err => {
            handleError(err);
        }).catch(err => {
            console.log("Error", err);
            handleError(err);
        });
    }




    //Display the product details  in a table
    function displayProducts(products) {

        const tbody = document.querySelector("#order-tbl");
        tbody.innerHTML = "";
        let content = "";
        let i = 1;

        if (products.length != 0) {
            for (let p of products) {

                let temp = ` <tr>
<td>${i}</td>
<td>${p.userName}</td>
<td>${p.name}</td>
<td>Rs.${p.price}</td>        
<td>${p.qty}</td>
<td>Rs.${p.total_amount}</td>
<td>${p.status}</td>
<td>${moment(p.created_date).format('DD-MM-YYYY')}</td>    
<td>${moment(p.modified_date).format('DD-MM-YYYY')}</td> <td>`

                if (p.status == "ORDERED") {
                    temp += `<button type = "button"  id ="order-btn1" data-product-id='${p._id}'> Delivered</button >`
                    temp += ` <button type="button" onclick="orderCancel('${p._id}')" id="cancel-btn1" data-cancel-id='${p._id}'>Cancel</button>`
                }

                `</td ></tr >`;

                content += temp;
                i++;
            }
            //     for (let p of products) {

            //         let temp = ` <tr>
            // <td>${i}</td>
            // <td>${p.user_name}</td>
            // <td>${p.name}</td>
            // <td>Rs.${p.price}</td>        
            // <td>${p.qty}</td>
            // <td>Rs.${p.total_amount}</td>
            // <td>${p.status}</td>
            // <td>${p.created_date}</td>        
            // <td>${p.modified_date}</td> <td>`

            //         if (p.status == "ORDERED") {
            //             temp += `<button type = "button"  id = "order-btn1" data-product-id=${p.id}> Delivered</button >`
            //             temp += ` <button type="button" onclick="orderCancel(${p.id})" id="cancel-btn1" data-cancel-id=${p.id}>Cancel</button>`
            //         }

            //         `</td ></tr >`;

            //         content += temp;
            //         i++;
            //     }
        }
        else {
            content = "No Records Found"
        }
        // console.log(content);
        tbody.innerHTML = content;




        //Assign Listeners
        document.querySelectorAll("#order-btn1").forEach(element => {
            let orderId = element.getAttribute("data-product-id");
            // console.log("productId", orderId);
            element.addEventListener('click', e => {
                deliveryStatusChange(orderId);

            });
        });

        function deliveryStatusChange(orderId) {
            let loggedInUser = JSON.parse(localStorage.getItem("LOGGED_IN_USER"));
            let loggedInUserId = loggedInUser.id;
            let userDetails = { loggedInUserId: loggedInUserId, orderId: orderId, status: "DELIVERED" }
            console.log("userDetails", userDetails);
            // let url = "http://localhost:3000/api/changeorderstatus";
            let url = "/api/changeorderstatus";
            axios.post(url, userDetails).then(response => {
                // productOrderAPI.orderProduct(orderObj).then(response => {
                console.log(response.data);
                toastr.success("Order Status Changed Successfully");
                // document.getElementById("errorMessage").innerHTML = err.response.data.message;
                // window.location.href = "orders.html";
                loadProducts();

            }).catch(err => {
                console.error("Erroro", err);
                toastr.error("Your Not Authorized")
                // document.getElementById("errorMessage").innerHTML = err.response.data.message;
            });
        }

    }
    let loggedInUser = JSON.parse(localStorage.getItem("LOGGED_IN_USER"));
    loadProducts();


    function orderCancel(id) {
        console.log("Cancel order id", id);
        // confirm("Are you sure you want to save this thing into the database?");
        if (confirm('Do you want to cancel this order?')) {
            // let url = "http://localhost:3000/api/cancelOrder";
            let url = "/api/order/" + id + "/cancel";
            let loggedInUser = JSON.parse(localStorage.getItem("LOGGED_IN_USER"));
            let userId = loggedInUser.id;
            let cancelOrderDetails = { userId: userId }
            axios.patch(url, cancelOrderDetails).then(response => {
                // productOrderAPI.orderProduct(orderObj).then(response => {
                console.log(response);
                // document.getElementById("errorMessage").innerHTML = response.data;
                toastr.success("Order Cancelled Success");
                loadProducts();
                // window.location.href = "orders.html";

            }).catch(err => {
                // console.error("Erroro", );   
                toastr.error(err.response.data.message);

                // document.getElementById("errorMessage").innerHTML = err.response.data.message;
            });


        } else {
            // Do nothing!
            console.log('Thing was not saved to the database.');
        }
    }

</script>